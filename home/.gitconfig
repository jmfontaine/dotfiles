[core]
	excludesfile = ~/.gitignore
	editor = vi
	pager = cat

[user]
	name = Jean-Marc Fontaine
	email = 

[color]
	ui = true

[alias]
	up = !git pull --rebase --prune $@
	cob = checkout -b
	cm = !git add -A && git commit -m
	wip = !git add -A && git commit -m 'WIP'
	undo = reset HEAD^ --mixed
	amend = commit -a --amend
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD^ --hard
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

	# If you use shortened hashes, sometimes you may encounter a collision. The following alias prints out all commits whose hash start with given string.
	abbr      = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
	changes   = diff --name-status -r
	ci        = commit
	co        = checkout
	cp        = cherry-pick
        ec        = config --global -e
	fp        = format-patch
	lg        = log --pretty=tformat:'%Cred%h%Creset %cr - %C(bold)%s%Creset %C(yellow)%d%Creset %Cgreen(%aN)%Creset' --date=relative
	lgg       = log --pretty=tformat:'%Cred%h%Creset %cr - %C(bold)%s%Creset %C(yellow)%d%Creset %Cgreen(%aN)%Creset' --date=relative --graph
	new       = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	oops      = reset HEAD^ --soft
	prune-all = !git remote | xargs -n 1 git remote prune
	st        = status
    whatis    = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    who       = shortlog -s --
	whois     = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
	branchlog = !sh -c \"git lg `git oldest-ancestor`..\"
	branchdiff = !sh -c \"git diff `git oldest-ancestor`..\"
	dump      = cat-file -p 

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix
	
[push]
	default = simple

[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool]
	prompt = false

[diff]
	tool = Kaleidoscope

[merge]
	tool = Kaleidoscope

[mergetool]
	keepBackup = true
	prompt = false

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true

[branch]
	autosetuprebase = always

[rerere]
	enabled = true
